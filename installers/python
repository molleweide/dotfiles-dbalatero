#!/usr/bin/env bash

source "${BASH_SOURCE%/*}/shared.sh"

require_installer package-manager

is_macos && export PYTHON_CONFIGURE_OPTS="--enable-framework"
is_linux && export PYTHON_CONFIGURE_OPTS="--enable-shared"

export PYENV_VIRTUALENV_DISABLE_PROMPT=1
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"

function load_pyenv() {
  eval "$(pyenv init -)"
  eval "$(pyenv virtualenv-init -)"
}

function install_python_versions() {
  pyenv install -s 2.7.16
  pyenv install -s 3.9.1
  pyenv global 2.7.16
}

function install_pyenv_virtualenvs() {
  if [ ! -d $(pyenv root)/plugins/pyenv-virtualenv ]; then
    git clone https://github.com/yyuu/pyenv-virtualenv.git \
      $(pyenv root)/plugins/pyenv-virtualenv
  fi

  if ! pyenv virtualenvs | grep -q py2neovim; then
    pyenv virtualenv 2.7.16 py2neovim
    pyenv activate py2neovim
    pip install --upgrade pip
    pip install neovim
  fi

  if ! pyenv virtualenvs | grep -q py3neovim; then
    pyenv virtualenv 3.9.1 py3neovim
    pyenv activate py3neovim
    pip install --upgrade pip
    pip install neovim
  fi
}

function install_pyenv() {
  if ! command_exists "pyenv"; then
    curl -L https://raw.githubusercontent.com/pyenv/pyenv-installer/master/bin/pyenv-installer | bash
  fi
}

function install_pyenv_virtualenv() {
  local plugin_path="$(pyenv root)/plugins/pyenv-virtualenv"

  if [ ! -d "$plugin_path" ]; then
    git clone https://github.com/pyenv/pyenv-virtualenv.git "$plugin_path"
  fi
}

function force_openssl_to_homebrew() {
  if [ $(which openssl) == "/usr/local/opt/openssl/bin/openssl" ]; then
    dotsay "+ Already forced OpenSSL to Homebrew's version"
  else
    dotsay "+ Installing OpenSSL from Homebrew..."
    brew_install openssl
    brew link openssl --force
  fi
}

dotheader "Setting up Python..."

force_openssl_to_homebrew
brew_install readline
brew_install xz

install_pyenv
install_pyenv_virtualenv
load_pyenv

install_python_versions
install_pyenv_virtualenvs
